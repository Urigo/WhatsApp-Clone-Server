# Chapter 5

First, let's start with the server.
We'll need to install a couple of packages:

    $ npm install @koa/cors apollo-server-koa graphql graphql-tools koa koa-bodyparser koa-router
    $ npm install --save-dev @types/graphql @types/koa @types/koa-bodyparser @types/koa-router @types/koa__cors

Now let's create some empty schemas and resolvers:

{{{ diffStep "1.1" files="schema/*" }}}

Time to create our index:

{{{ diffStep "1.1" files="^index.ts" }}}

Now we want to feed our graphql server with some data, so let's install moment

    $ npm install moment

and create a fake db:

{{{ diffStep "1.2" files="db.ts" }}}

Its' time to create our schema and our resolvers:

{{{ diffStep "1.3" }}}

# Chapter 6

First, let's install `graphql-code-generator`  in our server and add it to the run scripts:

    $ npm install graphql-code-generator

{{{ diffStep "2.1" }}}

Now let's run the generator (the server must be running in the background):

    $ npm run generator

Those are the types created with `npm run generator`:

{{{ diffStep "2.2" }}}

Now let's use them:

{{{ diffStep "2.3" }}}

Don't worry, they will be much more useful when we will write our first mutation.

# Chapter 9

Finally we're going to create our mutations in the server:

{{{ diffStep "3.1" }}}

    $ npm run generator

{{{ diffStep "3.3" }}}

